<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAAdcAAAHXAYySCGgAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAEwklEQVR4Xu2ay29PQRTHu2cllqohHhHPxKtVuvJnWHgsykZEJEjYYyHqmSBp2rD3LzRt+aU/XQgh
        BKGUqjfBQttrZprvzbnTM/feedyHcJJP9M45c2bO93f7u2dutfw3NxsWRAUxJKi9cRsPSenm9IkONO4F
        hVsjB0HuGC5xJlwRPnBr5MTbVKJT53tzgXiuCB9c9yHwNqeFuSJ8cN2HwNsSC7ctWUaTG+GK8IFbQ6dt
        6fLiBcB1FlwRPnBrcJQmwPtfMyzwF4W+3osv09Gdsd+xv3IBtm7bHseEpr1zx5z1xr/XTADKo7GJ6EzP
        JdYXiokfM/UUQBa/avUaFXv63EU2JgTvflYswOb2bfEYhxRBioF4LsYF5JsUVCoArk3Q4vPE5wX53lX9
        K4DrnYdvRV0H+qP5C9viMRpXFG/rIkDX/j5R/GL1M/6lcUVR+VMA17R4KYYeVxQvq+4DcC2Zt2BR1NXd
        q34d9LiiePJpqt5fgnSzeeLzgnwPJiu+A9I6P65z4+JcQL7RNxXfAWkU3QmiC6ylAGV0gs8/z376lQpQ
        ZSd4f6IGAuDaRFGdoDwDNF7NFl8LAcruBPH4q40AZXaC8gB0d7xmApTZCT4jX361EUBSRic4KX73m9qn
        XxsBOOjmbeKzni6OOP2lSE02CRC6E8wb54G1qYkmAdLw6QSxzujNkyzww0zxzb5j0cDZXbFfYG1qoq0A
        vp0g1tELAvDD2PgbJ6KhC/uKFSB0J6jHJQoiwA/j4m9fOaCKL1QAXJuw7QT1OFoQBX6YHt+4diguvhQB
        QneCmE+LptA1KNLXuJ4svhQBQneCmK8XDtavaI1jwIaVrdGdqwfnFF+KACE7QfmiE/O54lnEF97w5W62
        eAnyCaxNTcwSQBKiE3zxdVqd8jCfLVZjpPdINNizhy0cIJ/A2tTEPAJw0OLyxOutLVcwaPYfT/3UKWQN
        a1MTTQJs6eiMx3Rkl0iLl3BxlDwCNPuOikfcfrZQE2QNa1MTTQKkkdUJypcajz/M3vIo3CRAs/+Y+oIb
        urCXLRBgHmDGrU1NtBUgrROU53l5pB15PbdwgHXkLT7YsztRZBqYB5hxa1MTTQLYdILyE3/6cSq6O84X
        TcF8WpwPZE/WpiaaBMC1CVn82Lfp6OH76WiEudVNYD5XjAtkT9amJmYJYOoEm9ptvnZjR8JfUxLvDdSg
        LoD8szRtWEydIC1egvG/gNjUgC6AXpCpE6TF03j6WKPADzPF6+d83Q/gh5ni094bqIEsASRcJ0iLp/H6
        BgD8MDaeOecn/AT4YWx8xnsDNZBHAA5aPI1PbIAAP4yL58751E+BH8bFZ703UAMmAdZtMj8G12/uTBQv
        gY9ugAI/TI83nfNpDgr8MD0+z3sDNWASwBbMp5ukwK8jfWnnfD0PoDko0pf3vYEaKEsA13M+l0sS4r2B
        GtAF8IXbLEvOcz47l8PhvYEagADyv6RjzAd2cxo253xuvo7rewM1AAF8QT5ug8DlnM/lAb7vDdQAV4wL
        yMdu1OOcHzqfIDY1wBXjAvLFmwx0zg+dTxCbGuCKcQH5Qp/zQ+cTxEYHg0E340NR+QSxyaMhdQSBW9yF
        ovIJCjO6SJ0pzAq5owIzKPjXraXlD3aSSe/Ap4MBAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>